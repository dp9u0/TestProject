<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">

    <Window.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="MyButtonTemplate" TargetType="{x:Type Button}">
                <Border BorderBrush="Red" Name="TheBorder" BorderThickness="2">
                    <ContentPresenter />
                </Border>
            </ControlTemplate>
            <Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}" />
                <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">

                            <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                            <Grid x:Name="Grid">
                                <Border x:Name="Border" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}" />

                                <!-- Content Presenter is where the text content etc is placed by the control -->
                                <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True" />
                            </Grid>

                            <!--Each state sets a brush on the Border in the template -->
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}"
                                            TargetName="Border" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource MouseOverBrush}"
                                            TargetName="Border" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" Value="{DynamicResource PressedBrush}"
                                            TargetName="Border" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}"
                                            TargetName="Border" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="true" />
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"
                                            TargetName="Border" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}"
                                            TargetName="Border" />
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <StackPanel>
        <Button Template="{StaticResource MyButtonTemplate}" Click="Button_Click_1">My first button</Button>
        <Button Template="{StaticResource MyButtonTemplate}" Click="Button_Click">My second button</Button>
        <!-- The image contained within this button has an effective
     opacity of 0.125 (0.25 * 0.5 = 0.125). -->
        <Button Opacity="0.25">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Margin="10">A Button</TextBlock>
                <Image Source="001.jpg" Width="50" Height="50"
                       Opacity="0.5" />
            </StackPanel>
        </Button>
    </StackPanel>
</Window>